{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer\n}); //Set user info to the state if it is on local storage\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo') || '') : null; // type userInfo = {\n//   userInfo: object;\n// };\n// type InitialState = {\n//   userLogin: {\n//     userInfo: object;\n//   };\n// };\n\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/applab/learning/node/node_react_typescript_started/frontend/src/store.tsx"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","reducer","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,iBAPF,QAQO,yBARP;AAUA,MAAMC,OAAY,GAAGX,eAAe,CAAC;AACnCY,EAAAA,SAAS,EAAER,gBADwB;AAEnCS,EAAAA,YAAY,EAAER,mBAFqB;AAGnCS,EAAAA,WAAW,EAAER,kBAHsB;AAInCS,EAAAA,iBAAiB,EAAER,wBAJgB;AAKnCS,EAAAA,QAAQ,EAAER,eALyB;AAMnCS,EAAAA,UAAU,EAAER,iBANuB;AAOnCS,EAAAA,UAAU,EAAER;AAPuB,CAAD,CAApC,C,CAUA;;AACA,MAAMS,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAoC,EAA/C,CADwB,GAExB,IAFJ,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMG,YAAY,GAAG;AACnBZ,EAAAA,SAAS,EAAE;AAAEa,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAACxB,KAAD,CAAnB;AACA,MAAMyB,KAAK,GAAG5B,WAAW,CACvBY,OADuB,EAEvBa,YAFuB,EAGvBrB,mBAAmB,CAACF,eAAe,CAAC,GAAGyB,UAAJ,CAAhB,CAHI,CAAzB;AAOA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers';\n\nconst reducer: any = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n});\n\n//Set user info to the state if it is on local storage\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo') || '')\n  : null;\n// type userInfo = {\n//   userInfo: object;\n// };\n// type InitialState = {\n//   userLogin: {\n//     userInfo: object;\n//   };\n// };\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nexport type State = ReturnType<typeof reducer>;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}