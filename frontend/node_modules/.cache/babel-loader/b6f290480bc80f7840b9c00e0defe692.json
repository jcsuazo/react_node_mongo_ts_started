{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_ACTION, USER_REGISTER_ACTION, USER_DETAILS_ACTION, USER_UPDATE_PROFILE_ACTION, USER_LIST_ACTION, USER_REQUEST_ACTION, USER_UPDATE_ACTION } from '../constants/userConstants';\nexport const login = (email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_ACTION.USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_ACTION.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_ACTION.USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_ACTION.USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_ACTION.USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_ACTION.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_ACTION.USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGIN_ACTION.USER_LOGOUT\n  });\n  dispatch({\n    type: USER_REGISTER_ACTION.USER_REGISTER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_ACTION.USER_DETAILS_RESET\n  });\n  dispatch({\n    type: USER_LIST_ACTION.USER_LIST_RESET\n  });\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_ACTION.USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_ACTION.USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_ACTION.USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_ACTION.USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_ACTION.USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_ACTION.USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_ACTION.USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_ACTION.USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_ACTION.USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_REQUEST_ACTION.USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_REQUEST_ACTION.USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REQUEST_ACTION.USER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_ACTION.USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_ACTION.USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_ACTION.USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_ACTION.USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/applab/learning/node/node_react_typescript_started/frontend/src/actions/userActions.tsx"],"names":["axios","USER_LOGIN_ACTION","USER_REGISTER_ACTION","USER_DETAILS_ACTION","USER_UPDATE_PROFILE_ACTION","USER_LIST_ACTION","USER_REQUEST_ACTION","USER_UPDATE_ACTION","login","email","password","dispatch","getState","type","USER_LOGIN_REQUEST","config","headers","data","post","USER_LOGIN_SUCCESS","payload","localStorage","setItem","JSON","stringify","error","USER_LOGIN_FAIL","response","message","register","name","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","logout","removeItem","USER_LOGOUT","USER_REGISTER_LOGOUT","USER_DETAILS_RESET","USER_LIST_RESET","getUserDetails","id","USER_DETAILS_REQUEST","userLogin","userInfo","Authorization","token","get","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","updateUserProfile","user","USER_UPDATE_PROFILE_REQUEST","put","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","listUsers","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","deleteUser","USER_DELETE_REQUEST","delete","USER_DELETE_SUCCESS","USER_DELETE_FAIL","updateUser","USER_UPDATE_REQUEST","_id","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { Dispatch } from 'react';\nimport { State } from '../store';\nimport { Action } from '../interface/userInterface';\nimport {\n  USER_LOGIN_ACTION,\n  USER_REGISTER_ACTION,\n  USER_DETAILS_ACTION,\n  USER_UPDATE_PROFILE_ACTION,\n  USER_LIST_ACTION,\n  USER_REQUEST_ACTION,\n  USER_UPDATE_ACTION,\n} from '../constants/userConstants';\n\ntype GetState = () => State;\n\nexport const login =\n  (email: string, password: string) =>\n  async (dispatch: Dispatch<Action>, getState: GetState) => {\n    try {\n      dispatch({\n        type: USER_LOGIN_ACTION.USER_LOGIN_REQUEST,\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const { data } = await axios.post(\n        '/api/users/login',\n        {\n          email,\n          password,\n        },\n        config,\n      );\n      dispatch({\n        type: USER_LOGIN_ACTION.USER_LOGIN_SUCCESS,\n        payload: data,\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_LOGIN_ACTION.USER_LOGIN_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\nexport const register =\n  (name: string, email: string, password: string) =>\n  async (dispatch: Dispatch<Action>) => {\n    try {\n      dispatch({\n        type: USER_REGISTER_ACTION.USER_REGISTER_REQUEST,\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const { data } = await axios.post(\n        '/api/users',\n        {\n          name,\n          email,\n          password,\n        },\n        config,\n      );\n      dispatch({\n        type: USER_REGISTER_ACTION.USER_REGISTER_SUCCESS,\n        payload: data,\n      });\n      dispatch({\n        type: USER_LOGIN_ACTION.USER_LOGIN_SUCCESS,\n        payload: data,\n      });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_REGISTER_ACTION.USER_REGISTER_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const logout = () => (dispatch: Dispatch<Action>) => {\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGIN_ACTION.USER_LOGOUT });\n  dispatch({ type: USER_REGISTER_ACTION.USER_REGISTER_LOGOUT });\n  dispatch({ type: USER_DETAILS_ACTION.USER_DETAILS_RESET });\n  dispatch({ type: USER_LIST_ACTION.USER_LIST_RESET });\n};\n\nexport const getUserDetails =\n  (id: string) => async (dispatch: Dispatch<Action>, getState: GetState) => {\n    try {\n      dispatch({\n        type: USER_DETAILS_ACTION.USER_DETAILS_REQUEST,\n      });\n      const {\n        userLogin: { userInfo },\n      } = getState();\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n          'Content-Type': 'application/json',\n        },\n      };\n      const { data } = await axios.get(`/api/users/${id}`, config);\n      dispatch({\n        type: USER_DETAILS_ACTION.USER_DETAILS_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_DETAILS_ACTION.USER_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const updateUserProfile =\n  (user: object) => async (dispatch: Dispatch<Action>, getState: GetState) => {\n    try {\n      dispatch({\n        type: USER_UPDATE_PROFILE_ACTION.USER_UPDATE_PROFILE_REQUEST,\n      });\n      const {\n        userLogin: { userInfo },\n      }: any = getState();\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      const { data } = await axios.put(`/api/users/profile`, user, config);\n      dispatch({\n        type: USER_UPDATE_PROFILE_ACTION.USER_UPDATE_PROFILE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_UPDATE_PROFILE_ACTION.USER_UPDATE_PROFILE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const listUsers =\n  () => async (dispatch: Dispatch<Action>, getState: GetState) => {\n    try {\n      dispatch({\n        type: USER_LIST_ACTION.USER_LIST_REQUEST,\n      });\n      const {\n        userLogin: { userInfo },\n      }: any = getState();\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/users`, config);\n      dispatch({\n        type: USER_LIST_ACTION.USER_LIST_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_LIST_ACTION.USER_LIST_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const deleteUser =\n  (id: string) => async (dispatch: Dispatch<Action>, getState: GetState) => {\n    try {\n      dispatch({\n        type: USER_REQUEST_ACTION.USER_DELETE_REQUEST,\n      });\n      const {\n        userLogin: { userInfo },\n      }: any = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      await axios.delete(`/api/users/${id}`, config);\n      dispatch({\n        type: USER_REQUEST_ACTION.USER_DELETE_SUCCESS,\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_REQUEST_ACTION.USER_DELETE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\nexport const updateUser =\n  (user: any) => async (dispatch: Dispatch<Action>, getState: GetState) => {\n    try {\n      dispatch({\n        type: USER_UPDATE_ACTION.USER_UPDATE_REQUEST,\n      });\n      const {\n        userLogin: { userInfo },\n      }: any = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n      const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n      dispatch({\n        type: USER_UPDATE_ACTION.USER_UPDATE_SUCCESS,\n      });\n      dispatch({\n        type: USER_DETAILS_ACTION.USER_DETAILS_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: USER_UPDATE_ACTION.USER_UPDATE_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}